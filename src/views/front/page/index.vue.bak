<template>
  <n-grid :item-responsive="true" :x-gap="16" :y-gap="16">
    <!-- <n-grid-item span="0:24 640:24 1024:24">
      <n-space :vertical="true" :size="16">
        <n-card title="项目主要技术栈" :bordered="false" size="small" class="rounded-8px shadow-sm">
          <template #header-extra>
            <a class="text-primary" href="javascript:;">更多技术栈</a>
          </template>
          <n-grid :item-responsive="true" responsive="screen" cols="m:1 l:6" :x-gap="8" :y-gap="8">
            <n-grid-item v-for="item in technology" :key="item.id">
              <technology-card v-bind="item" />
            </n-grid-item>
          </n-grid>
        </n-card>
      </n-space>
    </n-grid-item> -->
    <n-grid-item span="0:24 640:24 1024:24">
      <n-space :vertical="true" :size="16">
        <n-card title="Page" :bordered="false" size="small" class="rounded-8px shadow-sm">
          <n-grid :item-responsive="true" responsive="screen" cols="m:1 l:6" :x-gap="8" :y-gap="8">
            <n-grid-item v-for="item in smallLogy" :key="item.id">
              <technology-card v-bind="item" />
            </n-grid-item>
          </n-grid>
        </n-card>
      </n-space>
    </n-grid-item>
    <!-- v-if="itemGroup == 1" -->
    <n-grid-item v-for="itemGroup in gourpLogy" :key="itemGroup" span="0:24 640:24 1024:24">
      <n-space :vertical="true" :size="16">
        <n-card :title="itemGroup + ''" :bordered="false" size="small" class="rounded-8px shadow-sm">
          <n-grid :item-responsive="true" responsive="screen" cols="m:1 l:6" :x-gap="8" :y-gap="8">
            <n-grid-item v-for="item in smallLogy" :key="item.id">
              <technology-card v-if="item.type === itemGroup" v-bind="item" />
            </n-grid-item>
          </n-grid>
        </n-card>
      </n-space>
    </n-grid-item>
  </n-grid>
</template>

<script setup lang="tsx">
import { onUnmounted, ref } from 'vue';
import type { Ref } from 'vue';
import { getPages } from '@/service';
import { ShortcutsCard, TechnologyCard } from './components';

defineOptions({ name: 'FrontPageMain' });

// interface Technology {
//   id?: number;
//   name?: string;
//   description?: string;
//   author?: string;
//   site?: string;
//   icon?: string;
//   iconColor?: string;
// }
// const technology: Technology[] = [];
// const gourpLogy: Technology[] = [
//   {
//     id: 0
//   },
//   {
//     id: 1
//   },
//   {
//     id: 2
//   }
// ];

// interface SmallLogy {
//   id: number;
//   name: string;
//   description: string;
//   site: string;
//   icon: string;
//   iconColor?: string;
// }

const smallLogy = ref<ApiPageManagement.Page[]>([]);
//  ref<ApiChartManagement.Rend[]>([]);
// const smallLogy: SmallLogy[] = [
//   {
//     id: 0,
//     name: 'Vue',
//     description: '一套用于构建用户界面的渐进式框架',
//     site: 'https://v3.cn.vuejs.org/',
//     icon: 'logos:vue'
//   }
// ];

// const dataPage = ref();
const gourpLogy = ref<number[]>([]);
async function getHomePages() {
  const { data } = await getPages();
  // dataPage.value = await getPages();
  if (data) {
    setTimeout(() => {
      smallLogy.value = data.list;
      gourpLogy.value = data.types;
    }, 1000);
  }
}

function init() {
  getHomePages();
}

// 初始化
init();
</script>

<style scoped></style>
